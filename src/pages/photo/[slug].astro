---
import type { SanityDocument } from "@sanity/client";
import { urlForImage } from "../../sanity/lib/url-for-image";
import { loadQuery } from "../../sanity/lib/load-query";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const { data: photos } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "photo" && defined(slug.current)]`,
  });

  return photos.map(({ slug }) => {
    return {
      params: {
        slug: slug.current,
      },
    };
  });
}

const { params } = Astro;

const { data: photo } = await loadQuery<any>({
  query: `*[_type == "photo" && slug.current == $slug][0]{
    ...,
    "orderKey": coalesce(dateTaken, _createdAt),
    "prev": *[_type == "photo" && coalesce(dateTaken,_createdAt) < ^.orderKey] | order(coalesce(dateTaken,_createdAt) desc)[0]{title, "slug": slug.current},
    "next": *[_type == "photo" && coalesce(dateTaken,_createdAt) > ^.orderKey] | order(coalesce(dateTaken,_createdAt) asc)[0]{title, "slug": slug.current}
  }`,
  params,
});

const formattedDate = photo.dateTaken ? new Date(photo.dateTaken).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}) : null;
---

<Layout title={photo.title}>
  <main class="main-content">
    <nav class="breadcrumbs">
      <a href="/">Home</a>
      <span>/</span>
      <a href="/photos">Gallery</a>
      <span>/</span>
      <span aria-current="page">{photo.title}</span>
    </nav>
    <article class="photo-container">
      <div class="photo-header">
        <h1 class="photo-title">{photo.title}</h1>
        {formattedDate && (
          <p class="photo-date">Captured on {formattedDate}</p>
        )}
      </div>

      <div class="toolbar">
        <div class="toolbar-left">
          <a href="/photos" class="btn btn-secondary">← Back to Gallery</a>
          <a href="/" class="btn btn-tertiary">Home</a>
        </div>
        <div class="toolbar-right">
          {photo.prev && (
            <a class="btn" href={`/photo/${photo.prev.slug}`}>← Prev</a>
          )}
          {photo.next && (
            <a class="btn" href={`/photo/${photo.next.slug}`}>Next →</a>
          )}
        </div>
      </div>

      {photo.image && (
        <div class="image-wrapper">
          <img 
            src={urlForImage(photo.image).width(2000).quality(90).url()} 
            alt={photo.image.alt || ""} 
            class="main-photo"
          />
        </div>
      )}

      <div class="photo-details">
        {photo.description && (
          <div class="detail-section description">
            <h2>Description</h2>
            <p>{photo.description}</p>
          </div>
        )}

        <div class="detail-section tech-details">
          <h2>Details</h2>
          <ul>
            {photo.camera && <li><strong>Camera:</strong> {photo.camera}</li>}
            {photo.settings?.aperture && <li><strong>Aperture:</strong> {photo.settings.aperture}</li>}
            {photo.settings?.shutterSpeed && <li><strong>Shutter Speed:</strong> {photo.settings.shutterSpeed}</li>}
            {photo.settings?.iso && <li><strong>ISO:</strong> {photo.settings.iso}</li>}
          </ul>
        </div>
      </div>

    </article>
  </main>
</Layout>

<style>
  .main-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 2.5rem;
  }
  .breadcrumbs {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    font-size: 0.95rem;
    color: #4a5568;
    margin-bottom: 1rem;
  }
  .breadcrumbs a { color: #1a202c; text-decoration: none; }
  .breadcrumbs a:hover { text-decoration: underline; }

  .photo-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .photo-title {
    font-size: 3rem;
    font-weight: 700;
    margin: 0 0 0.5rem 0;
  }

  .photo-date {
    color: var(--text-secondary);
    font-size: 1rem;
  }

  .image-wrapper {
    margin-bottom: 4rem;
  background-color: #f0f0f0;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 10px 20px rgba(0,0,0,0.06);
  }

  .main-photo {
    width: 100%;
    height: auto;
    display: block;
  }

  .photo-details {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 4rem;
  }
  .toolbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    gap: 1rem;
    flex-wrap: wrap;
  }
  .btn {
    display: inline-block;
    padding: 0.5rem 0.9rem;
    border: 1px solid var(--border-color);
    border-radius: 6px;
    text-decoration: none;
    color: #1a202c;
    background: #fff;
    transition: background-color .2s ease, border-color .2s ease;
  }
  .btn:hover { background: #f8fafc; border-color: #cbd5e1; }
  .btn-secondary { background: #1f2937; color: #fff; border-color: #1f2937; }
  .btn-secondary:hover { background: #111827; border-color: #111827; }
  .btn-tertiary { background: transparent; border-color: transparent; color: #4b5563; }
  .btn-tertiary:hover { background: #f3f4f6; border-color: #e5e7eb; }

  .detail-section h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0 0 1.5rem 0;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 1rem;
  }

  .description p {
    font-size: 1.125rem;
    line-height: 1.7;
    margin: 0;
  }

  .tech-details ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tech-details li {
    font-size: 1rem;
    margin-bottom: 1rem;
  }

  .tech-details strong {
    font-weight: 500;
    color: var(--text-secondary);
    display: block;
  }

  @media (max-width: 768px) {
    .photo-details {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
    .photo-title {
      font-size: 2.25rem;
    }
  .toolbar { gap: .75rem; }
  }
</style>
